//
// File Name: UserSystemControl.cfg
// Date: 2016
// Author: BudSpencer
//
// Purpose: define and control user commands + (read + write) database
// Features: SQLite, mySQL, 2 passwords, secrue (sha512, tiger192)
//


defaultvalue "user_db" "default"
defaultvalue "user_table" "users"
error_message_add = "Failed to add user ^f3'%1' ^f7to ^f4Database^f7."
error_message_add_i = "Failed to add user ^f3'%1' ^f7to ^f4Database^f7. (committed by ^f4%2(%3)^f7)"
success_message_add = "Successfully added user ^f3'%1' ^f7to ^f4Database^f7."
success_message_add_i = "Successfully added user ^f3'%1' ^f7to ^f4Database^f7. (committed by ^f4%2(%3)^f7)"
error_message_del = "Failed to remove user ^f3'%1' ^f7from ^f4Database^f7."
error_message_del_i = "Failed to remove user ^f3'%1' ^f7from ^f4Database^f7. (committed by ^f4%2(%3)^f7)"
success_message_del = "Successfully removed user ^f3'%1' ^f7from ^f4Database^f7."
success_message_del_i = "Successfully removed user ^f3'%1' ^f7from ^f4Database^f7. (committed by ^f4%2(%3)^f7)"
logout_message = "Player ^f3%1(%2) ^f7successfully logged out from ^f4user system^f7."
login_success_msg_m = "Player ^f3%1(%2) ^f7claimed local master as ^f4'%3'^f7."
login_success_msg_m_inv = "Your privilege level has been ^f3raised ^f7to ^f4(invisible) master^f7."
login_success_msg_a = "Player ^f3%1(%2) ^f7claimed local admin as ^f4'%3'^f7."
login_success_msg_a_inv = "Your privilege level has been ^f3raised ^f7to ^f4(invisible) admin^f7."
login_fail_msg_invalid_pw = "At least one of your ^f3passwords ^f7is incorrect. Please try ^f4again^f7."
login_fail_msg_not_reg = "You can't claim any ^f3privileges ^f7because you're not ^f4registered^f7."
login_fail_msg_account_disabled = "You can't be ^f3logged in^f7 because your account is ^f4disabled^f7."
login_fail_msg_already_loggedin = "You're already ^f3logged in^f7. Logout and try ^f4again^f7."


userexists = [
	db_init $user_db
	q = "SELECT username FROM :0 WHERE username LIKE ':1'"
	cases ( db_get_engine $user_db ) "sqlite3" [
			qh = ( sqlite3_pquery $db__uid $q $user_table $arg1 )
		] "mysql" [ 
			qh = ( mysql_pquery $db__uid $q $user_table $arg1 )
		] () [
			qh = -1
		]
			res = ( db_getrow $qh $user_db )
			db_finalize $qh $user_db 
		if ( =s $res "" ) [ result 0 ] [ result 1 ] // if result isn't empty, user exists; if result is empty, the user doesn't exist
]
		
	
cmd_adduser = [
	if ( commandisdisabled "adduser" ) [ pm $arg1 ( format $command_is_disabled_msg "adduser" ) ] [
		db_init $user_db
		username_ = ( sha512 ( tiger192 $arg2 ) )     
		privilege_ = $arg3
		enabled_ = $arg4
		visible_ = $arg5
		password1_ = ( sha512 ( tiger192 $arg6 ) ) // calculate the sha512 of the tiger192 of the first password -> secrue
		password2_ = ( sha512 ( tiger192 $arg7 ) ) // calculate the sha512 of the tiger192 of the second password -> secrue
		db__uid = ( db_get_dbuid $user_db )
		res = ""
	
		cases ( db_get_engine $user_db ) "sqlite3" [
			sqlite3_query $db__uid "BEGIN TRANSACTION"
			sqlite3_pquery $db__uid "INSERT OR REPLACE INTO `:0` (username, privilege, enabled, password1, password2, visible) VALUES (':1', :2, :3, ':4', ':5', :6)" $user_table $username_ $privilege_ $enabled_ $password1_ $password2_ $visible_
			res = ( sqlite3_query $db__uid "COMMIT" )
		] "mysql" [ 
			res = ( mysql_pquery $db__uid "INSERT INTO `:0` (username, privilege, enabled, password1, password2, visible) VALUES (':1', :2, :3, ':4', ':5', :6)" $user_table $username_ $privilege_ $enabled_ $password1_ $password2 $visible_ )
		] () [
			res = "XXX"
		]
		// return info message
		if ( =s $res "XXX" ) [ log_user_error ( format $error_message_add_i $arg2 ( getname $arg1 ) $arg1 ) ; pm $arg1 ( format $error_message_add $arg2 ) ] [ log_user ( format $success_message_add_i $arg2 ( getname $arg1 ) $arg1 ) ; pm $arg1 ( format $success_message_add $arg2 ) ]
		username_ = "" ; privilege_ = -1 ; enabled_ = -1 ; password1_ = "" ; password2_ = "" ; visible_ = -1 ; res = "" ; db__uid = -1 // protect variables from reading 
	]
]

cmd_deluser = [
	if ( commandisdisabled "deluser" ) [ pm $arg1 ( format $command_is_disabled_msg "deluser" ) ] [
		// if user doesn't exist
		if ( ! ( userexists ( sha512 ( tiger192 $arg2 ) ) ) ) [
			pm $arg1 ( format $error_message_del $arg2 ) ; ircsay ( format $error_message_del_i $arg2 ( getname $arg1 ) $arg1 ) ; log_user_error ( format $error_message_del_i $arg2 ( getname $arg1 ) $arg1 )
		] [
		// if user exists
			db_init $user_db
			username___ = ( sha512 ( tiger192 $arg2 ) )
			query__ = "DELETE FROM :0 WHERE username LIKE ':1'"
			db__uid = ( db_get_dbuid $user_db )
			
		cases ( db_get_engine $user_db ) "sqlite3" [
				qh = ( sqlite3_pquery $db__uid $query__ $user_table $username___ )
			] "mysql" [ 
				qh = ( mysql_pquery $db__uid $query__ $user_table $username___ )
			] () [
				qh = -1
			]
				db_finalize $qh $user_db 
			// return info message
			ircsay ( format $success_message_del_i $arg2 ( getname $arg1 ) $arg1 ) ; log_user ( format $success_message_del_i $arg2 ( getname $arg1 ) $arg1 ) ; pm $arg1 ( format $success_message_del $arg2 )
			username___ = "" ; db__uid = -1 ; query__ = "" // protect variables from reading
		]
	]
]		

cmd_claim = [
	if ( commandisdisabled "claim" ) [ pm $arg1 ( format $command_is_disabled_msg "claim" ) ] [
		isloggedin = ( getvar $arg1 log ) 
		db_init $user_db
		runner_name = ( getname $arg1 )
		runner_cn = $arg1
		__query__ = "SELECT username, privilege, enabled, password1, password2, visible FROM :0 WHERE username LIKE ':1'"
		db__uid = ( db_get_dbuid $user_db )
		_username = ( sha512 ( tiger192 $arg2 ) )
		_pw1 = ( sha512 ( tiger192 $arg3 ) )
		_pw2 = ( sha512 ( tiger192 $arg4 ) )
		res = ""
		
		cases ( db_get_engine $user_db ) "sqlite3" [
				qh = ( sqlite3_pquery $db__uid $__query__ $user_table $_username )
			] "mysql" [ 
				qh = ( mysql_pquery $db__uid $__query__ $user_table $_username )
			] () [
				qh = -1
			]
				res = ( db_getrow $qh $user_db )
				db_finalize $qh $user_db 
		
		// try login
		if ( !=s $res "" ) [
				if ( = ( at $res 2 ) 1 ) [
					if ( && ( =s ( at $res 3 ) $_pw1 ) ( =s ( at $res 4 ) $_pw2 ) ) [
						if ( = $isloggedin 0 ) [
							case ( at $res 1 ) 2 [
								case ( at $res 5 ) 1 [
									userpriv $arg1 2
									setvar $arg1 log 1
									say ( format $login_success_msg_m $runner_name $runner_cn $arg2 ) ; ircsay ( format $login_success_msg_m $runner_name $runner_cn $arg2 ) ; log_user ( format $login_success_msg_m $runner_name $runner_cn $arg2 )
								] 0 [
									invmaster $arg1 
									setvar $arg1 log 1
									pm $arg1 $login_success_msg_m_inv ; ircsay ( format "Player ^f3%1(%2) ^f7has claimed invisible master as ^f4'%3'^f7." ( getname $arg1 ) $arg1 $arg2 ) ; log_user ( format "Player ^f3%1(%2) ^f7has claimed invisible master as ^f4'%3'^f7." ( getname $arg1 ) $arg1 $arg2 )
								]
							] 3 [
								case ( at $res 5 ) 1 [
									userpriv $arg1 3
									setvar $arg1 log 1
									say ( format $login_success_msg_a $runner_name $runner_cn $arg2 ) ; ircsay ( format $login_success_msg_a $runner_name $runner_cn $arg2 ) ; log_user ( format $login_success_msg_a $runner_name $runner_cn $arg2 )
								] 0 [
									invadmin $arg1
									setvar $arg1 log 1
									pm $arg1 $login_success_msg_a_inv ; ircsay ( format "Player ^f3%1(%2) ^f7has claimed invisible admin as ^f4'%3'^f7." ( getname $arg1 ) $arg1 $arg2 ) ; log_user ( format "Player ^f3%1(%2) ^f7has claimed invisible admin as ^f4'%3'^f7." ( getname $arg1 ) $arg1 $arg2 )
								]
							] () [
								pm $arg1 ( format "User System ^f3Error^f7: ^f4No valid privilege integer detected!" )
							]
						] [
							pm $arg1 ( format $login_fail_msg_already_loggedin )
						]
					] [
						pm $arg1 ( format $login_fail_msg_invalid_pw )
					]
				] [
					pm $arg1 ( format $login_fail_msg_account_disabled )
				]
			] [
				pm $arg1 ( format $login_fail_msg_not_reg )
			]
		isloggedin = -1 ; runner_name = "" ; runner_cn = -1 ; __query__ = "" ; db__uid = -1 _username = "" ; _pw1 = "" ; _pw2 = "" ; res = "" // protect variables from reading 
	]
]

cmd_logout = [
	if ( commandisdisabled "logout" ) [ pm $arg1 ( format $command_is_disabled_msg "logout" ) ] [
		if ( = ( getvar $arg1 log ) 1 ) [
			setvar $arg1 log 0
			userpriv $arg1 0
			pm $arg1 ( format "You successfully ^f3logged out ^f7from ^f4user system^f7." ) ; ircsay ( format $logout_message ( getname $arg1 ) $arg1 ) ; log_user ( format $logout_message ( getname $arg1 ) $arg1 ) 
		] [
			pm $arg1 ( format "You're not ^f3logged in^f7. You can only ^f4logout ^f7if you're logged in." )
		]
	]
]

logout_direct = [
	if ( = ( getvar $arg1 log ) 1 ) [
		setvar $arg1 log 0
		userpriv $arg1 0
		ircsay ( format $logout_message ( getname $arg1 ) $arg1 ) ; log_user ( format $logout_message ( getname $arg1 ) $arg1 )
	]
]

addhandler "ondisconnect" logout_direct
registercommand "adduser" cmd_adduser 4 "wibbws" "adduser <username> <2|3> <1|0> <1|0> <password1> <password2> ^f3This commans allows you to add a user to database. (e.g. #adduser test 3 1 0 test xd) -> would add a user with name 'test' as admin (2=master|3=admin), with enabled account (1=enabled|0=disabled) as invisible (1=visible|0=invisible) and with password1=test and password2=xd."
registercommand "deluser" cmd_deluser 4 "w" "deluser <username> ^f3This command allows an admin to remove an specified user from database."
registercommand "claim" cmd_claim 1 "www" "claim <username> <password1> <password2> ^f3This command allows you to claim admin/master via user-system."
registercommand "logout" cmd_logout 2 "" "logout ^f3This command allows you to log yourself out if you're logged in."
		 

	
	
	




