//
// Project: GoldMod Collect
// File Name: cmd_mapsucks.cfg
// Date: 2016
// Author: BudSpencer 
//
// Purpose: vote for intermission (based on #votekick command)
//


mapsucks_list = ""
min_clients_ = 4

VoteForIntermission = [
	if ( commandisdisabled "mapsucks" ) [ pm $arg1 ( format $command_is_disabled_msg "mapsucks" ) ] [
		runner_ = $arg1 ; limit_ = ( getvkmslimit ( numclients ) ) ; votes__ = ( getvar ( getmap ) votes_ ) 
			if ( >= ( numclients ) $min_clients_ ) [ // only vote if >= 4 players are connected
				if ( = ( indexof $mapsucks_list ( getip $runner_ ) ) -1 ) [ // if not already voted
					if ( < ( getvar ( getmap ) votes_ ) ( - $limit_ 1 ) ) [ // if limit isn't reached
						setvar ( getmap ) votes_ ( + $votes__ 1 )
						say ( format "Player ^f3%1(%2) ^f7thinks, this map sucks^f7. Votes: ^f4%3 ^f7of ^f4%4^f7 Votes." ( getname $runner_ ) $runner_ ( getvar ( getmap ) votes_ ) $limit_ )
						mapsucks_list = ( listadd $mapsucks_list ( getip $runner_ ) )	
					] [
						if ( >= ( getvar ( getmap ) votes_ ) ( - $limit_ 1 ) ) [
							say ( format "Player ^f3%1(%2) ^f7thinks, this this map sucks. Limit of ^f4%3 ^f7is reached^f7! It's ^f4intermission^f7." ( getname $runner_ ) $runner_ $limit_ )
							forceintermission	
						]
					]
				] [
					pm $runner_ ( format "You already ^f3voted ^f7for ^f4intermission^f7." )
				]
			] [
				pm $runner_ ( format "Here aren't enough ^f3players ^f7for ^f4#mapsucks ^f7to work. You need at least ^f4%1 ^f7players^f7." $min_clients_ )
			]	
		runner_ = -1 // protect variables from reading
	]
]

reset_vars___ = [ mapsucks_list = "" ; setvar ( getmap ) votes_ 0 ]

addhandler "onimission" reset_vars___
registercommand "mapsucks" VoteForIntermission 1 "" "mapsucks ^f3This command allows you to vote for intermission. (50+% needed)"